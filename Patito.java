// Generated from Patito.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class Patito extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PROGRAM=1, MAIN=2, END=3, IF=4, ELSE=5, WHILE=6, DO=7, PRINT=8, VAR=9, 
		VOID=10, INT=11, FLOAT=12, ID=13, CTE_INT=14, CTE_FLOAT=15, CTE_STRING=16, 
		PLUS=17, MINUS=18, MULT=19, DIV=20, EQUAL=21, NEQ=22, GT=23, LT=24, LPAREN=25, 
		RPAREN=26, LBRACE=27, RBRACE=28, LBRACK=29, RBRACK=30, COLON=31, SEMICOLON=32, 
		COMMA=33, WS=34, LINE_COMMENT=35;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PROGRAM", "MAIN", "END", "IF", "ELSE", "WHILE", "DO", "PRINT", "VAR", 
			"VOID", "INT", "FLOAT", "ID", "CTE_INT", "CTE_FLOAT", "CTE_STRING", "PLUS", 
			"MINUS", "MULT", "DIV", "EQUAL", "NEQ", "GT", "LT", "LPAREN", "RPAREN", 
			"LBRACE", "RBRACE", "LBRACK", "RBRACK", "COLON", "SEMICOLON", "COMMA", 
			"WS", "LINE_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'program'", "'main'", "'end'", "'if'", "'else'", "'while'", "'do'", 
			"'print'", "'var'", "'void'", "'int'", "'float'", null, null, null, null, 
			"'+'", "'-'", "'*'", "'/'", "'='", "'!='", "'>'", "'<'", "'('", "')'", 
			"'{'", "'}'", "'['", "']'", "':'", "';'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "PROGRAM", "MAIN", "END", "IF", "ELSE", "WHILE", "DO", "PRINT", 
			"VAR", "VOID", "INT", "FLOAT", "ID", "CTE_INT", "CTE_FLOAT", "CTE_STRING", 
			"PLUS", "MINUS", "MULT", "DIV", "EQUAL", "NEQ", "GT", "LT", "LPAREN", 
			"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "COLON", "SEMICOLON", 
			"COMMA", "WS", "LINE_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Patito(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Patito.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000#\u00d7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0005\f\u0085\b\f\n\f\f\f\u0088"+
		"\t\f\u0001\r\u0004\r\u008b\b\r\u000b\r\f\r\u008c\u0001\u000e\u0004\u000e"+
		"\u0090\b\u000e\u000b\u000e\f\u000e\u0091\u0001\u000e\u0001\u000e\u0004"+
		"\u000e\u0096\b\u000e\u000b\u000e\f\u000e\u0097\u0001\u000f\u0001\u000f"+
		"\u0005\u000f\u009c\b\u000f\n\u000f\f\u000f\u009f\t\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001"+
		"\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0004"+
		"!\u00c7\b!\u000b!\f!\u00c8\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001"+
		"\"\u0005\"\u00d1\b\"\n\"\f\"\u00d4\t\"\u0001\"\u0001\"\u0000\u0000#\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#\u0001"+
		"\u0000\u0006\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u000009\u0003"+
		"\u0000\n\n\r\r\"\"\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u00dd\u0000"+
		"\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000"+
		"\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000"+
		"\u0001G\u0001\u0000\u0000\u0000\u0003O\u0001\u0000\u0000\u0000\u0005T"+
		"\u0001\u0000\u0000\u0000\u0007X\u0001\u0000\u0000\u0000\t[\u0001\u0000"+
		"\u0000\u0000\u000b`\u0001\u0000\u0000\u0000\rf\u0001\u0000\u0000\u0000"+
		"\u000fi\u0001\u0000\u0000\u0000\u0011o\u0001\u0000\u0000\u0000\u0013s"+
		"\u0001\u0000\u0000\u0000\u0015x\u0001\u0000\u0000\u0000\u0017|\u0001\u0000"+
		"\u0000\u0000\u0019\u0082\u0001\u0000\u0000\u0000\u001b\u008a\u0001\u0000"+
		"\u0000\u0000\u001d\u008f\u0001\u0000\u0000\u0000\u001f\u0099\u0001\u0000"+
		"\u0000\u0000!\u00a2\u0001\u0000\u0000\u0000#\u00a4\u0001\u0000\u0000\u0000"+
		"%\u00a6\u0001\u0000\u0000\u0000\'\u00a8\u0001\u0000\u0000\u0000)\u00aa"+
		"\u0001\u0000\u0000\u0000+\u00ac\u0001\u0000\u0000\u0000-\u00af\u0001\u0000"+
		"\u0000\u0000/\u00b1\u0001\u0000\u0000\u00001\u00b3\u0001\u0000\u0000\u0000"+
		"3\u00b5\u0001\u0000\u0000\u00005\u00b7\u0001\u0000\u0000\u00007\u00b9"+
		"\u0001\u0000\u0000\u00009\u00bb\u0001\u0000\u0000\u0000;\u00bd\u0001\u0000"+
		"\u0000\u0000=\u00bf\u0001\u0000\u0000\u0000?\u00c1\u0001\u0000\u0000\u0000"+
		"A\u00c3\u0001\u0000\u0000\u0000C\u00c6\u0001\u0000\u0000\u0000E\u00cc"+
		"\u0001\u0000\u0000\u0000GH\u0005p\u0000\u0000HI\u0005r\u0000\u0000IJ\u0005"+
		"o\u0000\u0000JK\u0005g\u0000\u0000KL\u0005r\u0000\u0000LM\u0005a\u0000"+
		"\u0000MN\u0005m\u0000\u0000N\u0002\u0001\u0000\u0000\u0000OP\u0005m\u0000"+
		"\u0000PQ\u0005a\u0000\u0000QR\u0005i\u0000\u0000RS\u0005n\u0000\u0000"+
		"S\u0004\u0001\u0000\u0000\u0000TU\u0005e\u0000\u0000UV\u0005n\u0000\u0000"+
		"VW\u0005d\u0000\u0000W\u0006\u0001\u0000\u0000\u0000XY\u0005i\u0000\u0000"+
		"YZ\u0005f\u0000\u0000Z\b\u0001\u0000\u0000\u0000[\\\u0005e\u0000\u0000"+
		"\\]\u0005l\u0000\u0000]^\u0005s\u0000\u0000^_\u0005e\u0000\u0000_\n\u0001"+
		"\u0000\u0000\u0000`a\u0005w\u0000\u0000ab\u0005h\u0000\u0000bc\u0005i"+
		"\u0000\u0000cd\u0005l\u0000\u0000de\u0005e\u0000\u0000e\f\u0001\u0000"+
		"\u0000\u0000fg\u0005d\u0000\u0000gh\u0005o\u0000\u0000h\u000e\u0001\u0000"+
		"\u0000\u0000ij\u0005p\u0000\u0000jk\u0005r\u0000\u0000kl\u0005i\u0000"+
		"\u0000lm\u0005n\u0000\u0000mn\u0005t\u0000\u0000n\u0010\u0001\u0000\u0000"+
		"\u0000op\u0005v\u0000\u0000pq\u0005a\u0000\u0000qr\u0005r\u0000\u0000"+
		"r\u0012\u0001\u0000\u0000\u0000st\u0005v\u0000\u0000tu\u0005o\u0000\u0000"+
		"uv\u0005i\u0000\u0000vw\u0005d\u0000\u0000w\u0014\u0001\u0000\u0000\u0000"+
		"xy\u0005i\u0000\u0000yz\u0005n\u0000\u0000z{\u0005t\u0000\u0000{\u0016"+
		"\u0001\u0000\u0000\u0000|}\u0005f\u0000\u0000}~\u0005l\u0000\u0000~\u007f"+
		"\u0005o\u0000\u0000\u007f\u0080\u0005a\u0000\u0000\u0080\u0081\u0005t"+
		"\u0000\u0000\u0081\u0018\u0001\u0000\u0000\u0000\u0082\u0086\u0007\u0000"+
		"\u0000\u0000\u0083\u0085\u0007\u0001\u0000\u0000\u0084\u0083\u0001\u0000"+
		"\u0000\u0000\u0085\u0088\u0001\u0000\u0000\u0000\u0086\u0084\u0001\u0000"+
		"\u0000\u0000\u0086\u0087\u0001\u0000\u0000\u0000\u0087\u001a\u0001\u0000"+
		"\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0089\u008b\u0007\u0002"+
		"\u0000\u0000\u008a\u0089\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000"+
		"\u0000\u0000\u008c\u008a\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000"+
		"\u0000\u0000\u008d\u001c\u0001\u0000\u0000\u0000\u008e\u0090\u0007\u0002"+
		"\u0000\u0000\u008f\u008e\u0001\u0000\u0000\u0000\u0090\u0091\u0001\u0000"+
		"\u0000\u0000\u0091\u008f\u0001\u0000\u0000\u0000\u0091\u0092\u0001\u0000"+
		"\u0000\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0095\u0005.\u0000"+
		"\u0000\u0094\u0096\u0007\u0002\u0000\u0000\u0095\u0094\u0001\u0000\u0000"+
		"\u0000\u0096\u0097\u0001\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000"+
		"\u0000\u0097\u0098\u0001\u0000\u0000\u0000\u0098\u001e\u0001\u0000\u0000"+
		"\u0000\u0099\u009d\u0005\"\u0000\u0000\u009a\u009c\b\u0003\u0000\u0000"+
		"\u009b\u009a\u0001\u0000\u0000\u0000\u009c\u009f\u0001\u0000\u0000\u0000"+
		"\u009d\u009b\u0001\u0000\u0000\u0000\u009d\u009e\u0001\u0000\u0000\u0000"+
		"\u009e\u00a0\u0001\u0000\u0000\u0000\u009f\u009d\u0001\u0000\u0000\u0000"+
		"\u00a0\u00a1\u0005\"\u0000\u0000\u00a1 \u0001\u0000\u0000\u0000\u00a2"+
		"\u00a3\u0005+\u0000\u0000\u00a3\"\u0001\u0000\u0000\u0000\u00a4\u00a5"+
		"\u0005-\u0000\u0000\u00a5$\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005*"+
		"\u0000\u0000\u00a7&\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005/\u0000\u0000"+
		"\u00a9(\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005=\u0000\u0000\u00ab*"+
		"\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005!\u0000\u0000\u00ad\u00ae\u0005"+
		"=\u0000\u0000\u00ae,\u0001\u0000\u0000\u0000\u00af\u00b0\u0005>\u0000"+
		"\u0000\u00b0.\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005<\u0000\u0000\u00b2"+
		"0\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005(\u0000\u0000\u00b42\u0001"+
		"\u0000\u0000\u0000\u00b5\u00b6\u0005)\u0000\u0000\u00b64\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0005{\u0000\u0000\u00b86\u0001\u0000\u0000\u0000\u00b9"+
		"\u00ba\u0005}\u0000\u0000\u00ba8\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005"+
		"[\u0000\u0000\u00bc:\u0001\u0000\u0000\u0000\u00bd\u00be\u0005]\u0000"+
		"\u0000\u00be<\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005:\u0000\u0000\u00c0"+
		">\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005;\u0000\u0000\u00c2@\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c4\u0005,\u0000\u0000\u00c4B\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c7\u0007\u0004\u0000\u0000\u00c6\u00c5\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c8\u0001\u0000\u0000\u0000\u00c8\u00c6\u0001\u0000\u0000"+
		"\u0000\u00c8\u00c9\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000"+
		"\u0000\u00ca\u00cb\u0006!\u0000\u0000\u00cbD\u0001\u0000\u0000\u0000\u00cc"+
		"\u00cd\u0005/\u0000\u0000\u00cd\u00ce\u0005/\u0000\u0000\u00ce\u00d2\u0001"+
		"\u0000\u0000\u0000\u00cf\u00d1\b\u0005\u0000\u0000\u00d0\u00cf\u0001\u0000"+
		"\u0000\u0000\u00d1\u00d4\u0001\u0000\u0000\u0000\u00d2\u00d0\u0001\u0000"+
		"\u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000\u00d3\u00d5\u0001\u0000"+
		"\u0000\u0000\u00d4\u00d2\u0001\u0000\u0000\u0000\u00d5\u00d6\u0006\"\u0000"+
		"\u0000\u00d6F\u0001\u0000\u0000\u0000\b\u0000\u0086\u008c\u0091\u0097"+
		"\u009d\u00c8\u00d2\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}